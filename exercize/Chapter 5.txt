//5.14

void inner4(vec_ptr u,vec_ptr v,data_t *dest)
{
	long i;
	long length=vec_length(u);
	long limit=length-5;
	data_t *udata=get_vec_start(u);
	data_t *vdata=get_vec_start(v);
	data_t sum=(data_t)0;
	
	for(i=0;i<limit;i+=6)
	{
		sum=sum+udata[i]*vdata[i]
		+udata[i+1]*vdata[i+1]
		+udata[i+2]*vdata[i+2]
		+udata[i+3]*vdata[i+3]
		+udata[i+4]*vdata[i+4]
		+udata[i+5]*vdata[i+5];
	}
	
	for(;i<length;i++)
		sum=sum+udata[i]*vdata[i];
	*dest=sum;
}

//5.15

void inner4(vec_ptr u,vec_ptr v,data_t *dest)
{
	long i;
	long length=vec_length(u);
	long limit=length-5;
	data_t *udata=get_vec_start(u);
	data_t *vdata=get_vec_start(v);
	data_t sum1=(data_t)0;
	data_t sum2=(data_t)0;
	data_t sum3=(data_t)0;
	data_t sum4=(data_t)0;
	data_t sum5=(data_t)0;
	data_t sum6=(data_t)0;
	
	for(i=0;i<limit;i+=6)
	{
		sum1=sum1+udata[i]*vdata[i];
		sum2=sum2+udata[i+1]*vdata[i+1];
		sum3=sum3+udata[i+2]*vdata[i+2];
		sum4=sum4+udata[i+3]*vdata[i+3];
		sum5=sum5+udata[i+4]*vdata[i+4];
		sum6=sum6+udata[i+5]*vdata[i+5];
	}
	
	for(;i<length;i++)
		sum1=sum1+udata[i]*vdata[i];
	*dest=sum1+sum2+sum3+sum4+sum5+sum6;
}

//5.16

void inner4(vec_ptr u,vec_ptr v,data_t *dest)
{
	long i;
	long length=vec_length(u);
	long limit=length-5;
	data_t *udata=get_vec_start(u);
	data_t *vdata=get_vec_start(v);
	data_t sum=(data_t)0;
	
	for(i=0;i<limit;i+=6)
	{
		sum=sum+(udata[i]*vdata[i]
		+udata[i+1]*vdata[i+1]
		+udata[i+2]*vdata[i+2]
		+udata[i+3]*vdata[i+3]
		+udata[i+4]*vdata[i+4]
		+udata[i+5]*vdata[i+5]);
	}
	
	for(;i<length;i++)
		sum=sum+udata[i]*vdata[i];
	*dest=sum;
}

//5.17

void *eff_memset(void *s,int c,size_t n)
{
	size_t k=sizeof(unsigned long);
	size_t limit=n-k+1;
	unsigned long p=0,i;
	unsigned char *schar=s,*slong=&p;
	
	for(i=0;i<k;i++)
		*(slong+i)=(unsigned char)c;
	for(i=0;i<n;i++)
	{
		if(((unsigned long)schar+i)%k==0)
			break;
		*(schar+i)=(unsigned char)c;
	}
	for(;i<limit;i+=k)
		*(schar+i)=p;
	for(;i<n;i++)
		*(schar+i)=(unsigned char)c;
	return s;
}
	
	
	
	
	
	
	
		